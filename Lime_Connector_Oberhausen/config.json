{
  "verticles": {
    "de.urbanpulse.connector.sdk.inbound.InboundTriggerVerticle": {
      "period": 300000,
      "outputAddress": "Inbound"
    },

    "LimeBikeOberhausenVerticle": {
      "classname": "de.urbanpulse.connector.sdk.inbound.HttpRequestVerticle",
      "inputAddress": "Inbound",
      "outputAddress": "PreProcessing",
      "host": "host of lime",
      "port": "port from lime",
      "path": "city specific path, e. g. api/oberhausen/gbfs/..."      
    },

    "de.urbanpulse.connector.sdk.core.runtime.preprocessing.PreProcessorVerticle": {
      "inputAddress": "PreProcessing",
      "outputAddress": "Processing",
      "commands": [
        {
          "classname": "de.dksr.city.LimeOberhausenFlattener"
        }
      ]
    },
    "de.urbanpulse.connector.sdk.core.runtime.processing.DefaultProcessingVerticle": {
      "inputAddress": "Processing",
      "outputAddress": "Outbound"
    },
    "de.urbanpulse.connector.sdk.core.runtime.outbound.SDKConnectorVerticle": {
      "inputAddress": "Outbound",
      "upManagement": {
        "username": "username of up management connector developer",
        "password": "password of up management connector developer",
        "trustAll": true,
        "baseUrl": "UrbanPulseManagement API of your instance, e. g. https://host/UrbanPulseManagement/api"
      },
      "connectorName": "LimeOberhausenConnectorPilot",
      "statementsConfig": {
        "LimeOberhausenEventTypeStatement": {
          "query": "SELECT * FROM LimeOberhausenEventType",
          "targets": [
            "target of your instance outbound listener, e. g. wss://host/OutboundInterfaces/outbound/LimeOberhausenEventTypeStatement"
          ]
        }
      },
      "eventSenderAddresses": {
        "inputVertLogger": "loggerVerticle",
        "inputVertHTTP": "httpVerticle"
      },
      "sensorEventFactoryConfig": {
        "eventTypeName": "LimeOberhausenEventType",
        "eventTypeAcquisitionStrategy": "manual",
        "eventType": {
          "description": {
            "bike_id": "Id of the bike",
            "lat": "latitude of the station",
            "lon": "longitude of the station",
            "is_reserved": "Status of the bike if reserved",
            "is_disabled": "Status of the bike if disabled",
            "vehicle_type": "Type of the bike"
          },
          "config": {
            "bike_id": "string",
            "lat": "double",
            "lon": "double",
            "is_reserved": "double",
            "is_disabled": "double",
            "vehicle_type": "string"
          }
        },
        "primaryKeyFields": ["vehicle_type"]
      },
      "categoryFactory": "de.urbanpulse.connector.sdk.core.CategoryFactoryJsonImpl",
      "sensorEventFactory": "de.urbanpulse.connector.sdk.core.runtime.SensorEventFactoryJsonConfigImpl",
      "sensorFactory": "de.urbanpulse.connector.sdk.core.SensorFactoryDefaultImpl"
    },
    "de.urbanpulse.connector.sdk.core.runtime.outbound.EventSenderVerticleHttp": {
      "inputAddress": "httpVerticle",
      "senderConfig": {
        "url": "url of your sender server/ inbound layer, e. g. https://host/Inbound",
        "connectorId": "filled by sdk",
        "connectorKey": "filled by sdk",
        "trustAll": true
      },
      "queueConfig": {
      }
    },
    "de.urbanpulse.connector.sdk.core.runtime.outbound.EventSenderVerticleLogger": {
      "inputAddress": "loggerVerticle",
      "senderConfig": {
      },
      "queueConfig": {
      }
    }
  },
  "deploymentOrder": [
    {
      "verticle": "LimeBikeOberhausenVerticle",
      "instances": 1,
      "isWorker": false,
      "isMultiThreaded": false
    },
    {
      "verticle": "de.urbanpulse.connector.sdk.core.runtime.preprocessing.PreProcessorVerticle",
      "instances": 1,
      "isWorker": false,
      "isMultiThreaded": false
    },
    {
      "verticle": "de.urbanpulse.connector.sdk.core.runtime.processing.DefaultProcessingVerticle",
      "instances": 1,
      "isWorker": false,
      "isMultiThreaded": false
    },
    {
      "verticle": "de.urbanpulse.connector.sdk.core.runtime.outbound.EventSenderVerticleHttp",
      "instances": 1,
      "isWorker": false,
      "isMultiThreaded": false
    },
    {
      "verticle": "de.urbanpulse.connector.sdk.core.runtime.outbound.EventSenderVerticleLogger",
      "instances": 1,
      "isWorker": false,
      "isMultiThreaded": false
    },
    {
      "verticle": "de.urbanpulse.connector.sdk.core.runtime.outbound.SDKConnectorVerticle",
      "instances": 1,
      "isWorker": true,
      "isMultiThreaded": false
    },
    {
      "verticle": "de.urbanpulse.connector.sdk.inbound.InboundTriggerVerticle",
      "instances": 1,
      "isWorker": false,
      "isMultiThreaded": false
    }
  ]
}
